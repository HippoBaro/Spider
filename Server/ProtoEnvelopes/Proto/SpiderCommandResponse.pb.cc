// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/SpiderCommandResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SpiderCommandResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* SpiderCommandResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SpiderCommandResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Proto_2fSpiderCommandResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Proto_2fSpiderCommandResponse_2eproto() {
  protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Proto/SpiderCommandResponse.proto");
  GOOGLE_CHECK(file != NULL);
  SpiderCommandResponse_descriptor_ = file->message_type(0);
  static const int SpiderCommandResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpiderCommandResponse, payloadtype_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpiderCommandResponse, payload_),
  };
  SpiderCommandResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SpiderCommandResponse_descriptor_,
      SpiderCommandResponse::internal_default_instance(),
      SpiderCommandResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SpiderCommandResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SpiderCommandResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Proto_2fSpiderCommandResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SpiderCommandResponse_descriptor_, SpiderCommandResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Proto_2fSpiderCommandResponse_2eproto() {
  SpiderCommandResponse_default_instance_.Shutdown();
  delete SpiderCommandResponse_reflection_;
}

void protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SpiderCommandResponse_default_instance_.DefaultConstruct();
  SpiderCommandResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto_once_);
void protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto_once_,
                 &protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto_impl);
}
void protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!Proto/SpiderCommandResponse.proto\032\031goo"
    "gle/protobuf/any.proto\"S\n\025SpiderCommandR"
    "esponse\022\023\n\013PayloadType\030\001 \001(\t\022%\n\007Payload\030"
    "\002 \001(\0132\024.google.protobuf.Anyb\006proto3", 155);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto/SpiderCommandResponse.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Proto_2fSpiderCommandResponse_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto_once_);
void protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto_once_,
                 &protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Proto_2fSpiderCommandResponse_2eproto {
  StaticDescriptorInitializer_Proto_2fSpiderCommandResponse_2eproto() {
    protobuf_AddDesc_Proto_2fSpiderCommandResponse_2eproto();
  }
} static_descriptor_initializer_Proto_2fSpiderCommandResponse_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpiderCommandResponse::kPayloadTypeFieldNumber;
const int SpiderCommandResponse::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpiderCommandResponse::SpiderCommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:SpiderCommandResponse)
}

void SpiderCommandResponse::InitAsDefaultInstance() {
  payload_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

SpiderCommandResponse::SpiderCommandResponse(const SpiderCommandResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SpiderCommandResponse)
}

void SpiderCommandResponse::SharedCtor() {
  payloadtype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_ = NULL;
  _cached_size_ = 0;
}

SpiderCommandResponse::~SpiderCommandResponse() {
  // @@protoc_insertion_point(destructor:SpiderCommandResponse)
  SharedDtor();
}

void SpiderCommandResponse::SharedDtor() {
  payloadtype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &SpiderCommandResponse_default_instance_.get()) {
    delete payload_;
  }
}

void SpiderCommandResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SpiderCommandResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SpiderCommandResponse_descriptor_;
}

const SpiderCommandResponse& SpiderCommandResponse::default_instance() {
  protobuf_InitDefaults_Proto_2fSpiderCommandResponse_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SpiderCommandResponse> SpiderCommandResponse_default_instance_;

SpiderCommandResponse* SpiderCommandResponse::New(::google::protobuf::Arena* arena) const {
  SpiderCommandResponse* n = new SpiderCommandResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SpiderCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:SpiderCommandResponse)
  payloadtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) delete payload_;
  payload_ = NULL;
}

bool SpiderCommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SpiderCommandResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string PayloadType = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payloadtype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->payloadtype().data(), this->payloadtype().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SpiderCommandResponse.PayloadType"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Payload;
        break;
      }

      // optional .google.protobuf.Any Payload = 2;
      case 2: {
        if (tag == 18) {
         parse_Payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_payload()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SpiderCommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SpiderCommandResponse)
  return false;
#undef DO_
}

void SpiderCommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SpiderCommandResponse)
  // optional string PayloadType = 1;
  if (this->payloadtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payloadtype().data(), this->payloadtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SpiderCommandResponse.PayloadType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->payloadtype(), output);
  }

  // optional .google.protobuf.Any Payload = 2;
  if (this->has_payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->payload_, output);
  }

  // @@protoc_insertion_point(serialize_end:SpiderCommandResponse)
}

::google::protobuf::uint8* SpiderCommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SpiderCommandResponse)
  // optional string PayloadType = 1;
  if (this->payloadtype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->payloadtype().data(), this->payloadtype().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SpiderCommandResponse.PayloadType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->payloadtype(), target);
  }

  // optional .google.protobuf.Any Payload = 2;
  if (this->has_payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->payload_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SpiderCommandResponse)
  return target;
}

size_t SpiderCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SpiderCommandResponse)
  size_t total_size = 0;

  // optional string PayloadType = 1;
  if (this->payloadtype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->payloadtype());
  }

  // optional .google.protobuf.Any Payload = 2;
  if (this->has_payload()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->payload_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SpiderCommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SpiderCommandResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SpiderCommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpiderCommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SpiderCommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SpiderCommandResponse)
    UnsafeMergeFrom(*source);
  }
}

void SpiderCommandResponse::MergeFrom(const SpiderCommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SpiderCommandResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SpiderCommandResponse::UnsafeMergeFrom(const SpiderCommandResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.payloadtype().size() > 0) {

    payloadtype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payloadtype_);
  }
  if (from.has_payload()) {
    mutable_payload()->::google::protobuf::Any::MergeFrom(from.payload());
  }
}

void SpiderCommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SpiderCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpiderCommandResponse::CopyFrom(const SpiderCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SpiderCommandResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SpiderCommandResponse::IsInitialized() const {

  return true;
}

void SpiderCommandResponse::Swap(SpiderCommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpiderCommandResponse::InternalSwap(SpiderCommandResponse* other) {
  payloadtype_.Swap(&other->payloadtype_);
  std::swap(payload_, other->payload_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SpiderCommandResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SpiderCommandResponse_descriptor_;
  metadata.reflection = SpiderCommandResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SpiderCommandResponse

// optional string PayloadType = 1;
void SpiderCommandResponse::clear_payloadtype() {
  payloadtype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SpiderCommandResponse::payloadtype() const {
  // @@protoc_insertion_point(field_get:SpiderCommandResponse.PayloadType)
  return payloadtype_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpiderCommandResponse::set_payloadtype(const ::std::string& value) {
  
  payloadtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SpiderCommandResponse.PayloadType)
}
void SpiderCommandResponse::set_payloadtype(const char* value) {
  
  payloadtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SpiderCommandResponse.PayloadType)
}
void SpiderCommandResponse::set_payloadtype(const char* value, size_t size) {
  
  payloadtype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SpiderCommandResponse.PayloadType)
}
::std::string* SpiderCommandResponse::mutable_payloadtype() {
  
  // @@protoc_insertion_point(field_mutable:SpiderCommandResponse.PayloadType)
  return payloadtype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SpiderCommandResponse::release_payloadtype() {
  // @@protoc_insertion_point(field_release:SpiderCommandResponse.PayloadType)
  
  return payloadtype_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SpiderCommandResponse::set_allocated_payloadtype(::std::string* payloadtype) {
  if (payloadtype != NULL) {
    
  } else {
    
  }
  payloadtype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payloadtype);
  // @@protoc_insertion_point(field_set_allocated:SpiderCommandResponse.PayloadType)
}

// optional .google.protobuf.Any Payload = 2;
bool SpiderCommandResponse::has_payload() const {
  return this != internal_default_instance() && payload_ != NULL;
}
void SpiderCommandResponse::clear_payload() {
  if (GetArenaNoVirtual() == NULL && payload_ != NULL) delete payload_;
  payload_ = NULL;
}
const ::google::protobuf::Any& SpiderCommandResponse::payload() const {
  // @@protoc_insertion_point(field_get:SpiderCommandResponse.Payload)
  return payload_ != NULL ? *payload_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* SpiderCommandResponse::mutable_payload() {
  
  if (payload_ == NULL) {
    payload_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:SpiderCommandResponse.Payload)
  return payload_;
}
::google::protobuf::Any* SpiderCommandResponse::release_payload() {
  // @@protoc_insertion_point(field_release:SpiderCommandResponse.Payload)
  
  ::google::protobuf::Any* temp = payload_;
  payload_ = NULL;
  return temp;
}
void SpiderCommandResponse::set_allocated_payload(::google::protobuf::Any* payload) {
  delete payload_;
  payload_ = payload;
  if (payload) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:SpiderCommandResponse.Payload)
}

inline const SpiderCommandResponse* SpiderCommandResponse::internal_default_instance() {
  return &SpiderCommandResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
