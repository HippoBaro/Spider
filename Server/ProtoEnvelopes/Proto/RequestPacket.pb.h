// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/RequestPacket.proto

#ifndef PROTOBUF_Proto_2fRequestPacket_2eproto__INCLUDED
#define PROTOBUF_Proto_2fRequestPacket_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CmdPacket.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_Proto_2fRequestPacket_2eproto();
void protobuf_InitDefaults_Proto_2fRequestPacket_2eproto();
void protobuf_AssignDesc_Proto_2fRequestPacket_2eproto();
void protobuf_ShutdownFile_Proto_2fRequestPacket_2eproto();

class RequestPacket;

enum RequestPacket_MethodID {
  RequestPacket_MethodID_LIST = 0,
  RequestPacket_MethodID_GET = 1,
  RequestPacket_MethodID_SEND = 2,
  RequestPacket_MethodID_RequestPacket_MethodID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestPacket_MethodID_RequestPacket_MethodID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestPacket_MethodID_IsValid(int value);
const RequestPacket_MethodID RequestPacket_MethodID_MethodID_MIN = RequestPacket_MethodID_LIST;
const RequestPacket_MethodID RequestPacket_MethodID_MethodID_MAX = RequestPacket_MethodID_SEND;
const int RequestPacket_MethodID_MethodID_ARRAYSIZE = RequestPacket_MethodID_MethodID_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestPacket_MethodID_descriptor();
inline const ::std::string& RequestPacket_MethodID_Name(RequestPacket_MethodID value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestPacket_MethodID_descriptor(), value);
}
inline bool RequestPacket_MethodID_Parse(
    const ::std::string& name, RequestPacket_MethodID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestPacket_MethodID>(
    RequestPacket_MethodID_descriptor(), name, value);
}
// ===================================================================

class RequestPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RequestPacket) */ {
 public:
  RequestPacket();
  virtual ~RequestPacket();

  RequestPacket(const RequestPacket& from);

  inline RequestPacket& operator=(const RequestPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPacket& default_instance();

  static const RequestPacket* internal_default_instance();

  void Swap(RequestPacket* other);

  // implements Message ----------------------------------------------

  inline RequestPacket* New() const { return New(NULL); }

  RequestPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPacket& from);
  void MergeFrom(const RequestPacket& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestPacket* other);
  void UnsafeMergeFrom(const RequestPacket& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RequestPacket_MethodID MethodID;
  static const MethodID LIST =
    RequestPacket_MethodID_LIST;
  static const MethodID GET =
    RequestPacket_MethodID_GET;
  static const MethodID SEND =
    RequestPacket_MethodID_SEND;
  static inline bool MethodID_IsValid(int value) {
    return RequestPacket_MethodID_IsValid(value);
  }
  static const MethodID MethodID_MIN =
    RequestPacket_MethodID_MethodID_MIN;
  static const MethodID MethodID_MAX =
    RequestPacket_MethodID_MethodID_MAX;
  static const int MethodID_ARRAYSIZE =
    RequestPacket_MethodID_MethodID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MethodID_descriptor() {
    return RequestPacket_MethodID_descriptor();
  }
  static inline const ::std::string& MethodID_Name(MethodID value) {
    return RequestPacket_MethodID_Name(value);
  }
  static inline bool MethodID_Parse(const ::std::string& name,
      MethodID* value) {
    return RequestPacket_MethodID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .RequestPacket.MethodID Method = 1;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  ::RequestPacket_MethodID method() const;
  void set_method(::RequestPacket_MethodID value);

  // optional int32 Limit = 2;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // optional string clientUUID = 3;
  void clear_clientuuid();
  static const int kClientUUIDFieldNumber = 3;
  const ::std::string& clientuuid() const;
  void set_clientuuid(const ::std::string& value);
  void set_clientuuid(const char* value);
  void set_clientuuid(const char* value, size_t size);
  ::std::string* mutable_clientuuid();
  ::std::string* release_clientuuid();
  void set_allocated_clientuuid(::std::string* clientuuid);

  // optional .CmdPacket Command = 4;
  bool has_command() const;
  void clear_command();
  static const int kCommandFieldNumber = 4;
  const ::CmdPacket& command() const;
  ::CmdPacket* mutable_command();
  ::CmdPacket* release_command();
  void set_allocated_command(::CmdPacket* command);

  // @@protoc_insertion_point(class_scope:RequestPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr clientuuid_;
  ::CmdPacket* command_;
  int method_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_Proto_2fRequestPacket_2eproto_impl();
  friend void  protobuf_AddDesc_Proto_2fRequestPacket_2eproto_impl();
  friend void protobuf_AssignDesc_Proto_2fRequestPacket_2eproto();
  friend void protobuf_ShutdownFile_Proto_2fRequestPacket_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<RequestPacket> RequestPacket_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestPacket

// optional .RequestPacket.MethodID Method = 1;
inline void RequestPacket::clear_method() {
  method_ = 0;
}
inline ::RequestPacket_MethodID RequestPacket::method() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Method)
  return static_cast< ::RequestPacket_MethodID >(method_);
}
inline void RequestPacket::set_method(::RequestPacket_MethodID value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:RequestPacket.Method)
}

// optional int32 Limit = 2;
inline void RequestPacket::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 RequestPacket::limit() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Limit)
  return limit_;
}
inline void RequestPacket::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:RequestPacket.Limit)
}

// optional string clientUUID = 3;
inline void RequestPacket::clear_clientuuid() {
  clientuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPacket::clientuuid() const {
  // @@protoc_insertion_point(field_get:RequestPacket.clientUUID)
  return clientuuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_clientuuid(const ::std::string& value) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestPacket.clientUUID)
}
inline void RequestPacket::set_clientuuid(const char* value) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestPacket.clientUUID)
}
inline void RequestPacket::set_clientuuid(const char* value, size_t size) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestPacket.clientUUID)
}
inline ::std::string* RequestPacket::mutable_clientuuid() {
  
  // @@protoc_insertion_point(field_mutable:RequestPacket.clientUUID)
  return clientuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPacket::release_clientuuid() {
  // @@protoc_insertion_point(field_release:RequestPacket.clientUUID)
  
  return clientuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPacket::set_allocated_clientuuid(::std::string* clientuuid) {
  if (clientuuid != NULL) {
    
  } else {
    
  }
  clientuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientuuid);
  // @@protoc_insertion_point(field_set_allocated:RequestPacket.clientUUID)
}

// optional .CmdPacket Command = 4;
inline bool RequestPacket::has_command() const {
  return this != internal_default_instance() && command_ != NULL;
}
inline void RequestPacket::clear_command() {
  if (GetArenaNoVirtual() == NULL && command_ != NULL) delete command_;
  command_ = NULL;
}
inline const ::CmdPacket& RequestPacket::command() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Command)
  return command_ != NULL ? *command_
                         : *::CmdPacket::internal_default_instance();
}
inline ::CmdPacket* RequestPacket::mutable_command() {
  
  if (command_ == NULL) {
    command_ = new ::CmdPacket;
  }
  // @@protoc_insertion_point(field_mutable:RequestPacket.Command)
  return command_;
}
inline ::CmdPacket* RequestPacket::release_command() {
  // @@protoc_insertion_point(field_release:RequestPacket.Command)
  
  ::CmdPacket* temp = command_;
  command_ = NULL;
  return temp;
}
inline void RequestPacket::set_allocated_command(::CmdPacket* command) {
  delete command_;
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RequestPacket.Command)
}

inline const RequestPacket* RequestPacket::internal_default_instance() {
  return &RequestPacket_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RequestPacket_MethodID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RequestPacket_MethodID>() {
  return ::RequestPacket_MethodID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Proto_2fRequestPacket_2eproto__INCLUDED
