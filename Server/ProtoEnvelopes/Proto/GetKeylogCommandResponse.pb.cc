// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/GetKeylogCommandResponse.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "GetKeylogCommandResponse.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* GetKeylogCommandResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetKeylogCommandResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Proto_2fGetKeylogCommandResponse_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Proto_2fGetKeylogCommandResponse_2eproto() {
  protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Proto/GetKeylogCommandResponse.proto");
  GOOGLE_CHECK(file != NULL);
  GetKeylogCommandResponse_descriptor_ = file->message_type(0);
  static const int GetKeylogCommandResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetKeylogCommandResponse, keylog_),
  };
  GetKeylogCommandResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetKeylogCommandResponse_descriptor_,
      GetKeylogCommandResponse::internal_default_instance(),
      GetKeylogCommandResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetKeylogCommandResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetKeylogCommandResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Proto_2fGetKeylogCommandResponse_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetKeylogCommandResponse_descriptor_, GetKeylogCommandResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Proto_2fGetKeylogCommandResponse_2eproto() {
  GetKeylogCommandResponse_default_instance_.Shutdown();
  delete GetKeylogCommandResponse_reflection_;
}

void protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_Proto_2fSpiderKeyloggingPayload_2eproto();
  GetKeylogCommandResponse_default_instance_.DefaultConstruct();
  GetKeylogCommandResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto_once_);
void protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto_once_,
                 &protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto_impl);
}
void protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n$Proto/GetKeylogCommandResponse.proto\032#"
    "Proto/SpiderKeyloggingPayload.proto\"D\n\030G"
    "etKeylogCommandResponse\022(\n\006keylog\030\001 \003(\0132"
    "\030.SpiderKeyLoggingPayloadb\006proto3", 153);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto/GetKeylogCommandResponse.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_Proto_2fSpiderKeyloggingPayload_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Proto_2fGetKeylogCommandResponse_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto_once_);
void protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto_once_,
                 &protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Proto_2fGetKeylogCommandResponse_2eproto {
  StaticDescriptorInitializer_Proto_2fGetKeylogCommandResponse_2eproto() {
    protobuf_AddDesc_Proto_2fGetKeylogCommandResponse_2eproto();
  }
} static_descriptor_initializer_Proto_2fGetKeylogCommandResponse_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetKeylogCommandResponse::kKeylogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetKeylogCommandResponse::GetKeylogCommandResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:GetKeylogCommandResponse)
}

void GetKeylogCommandResponse::InitAsDefaultInstance() {
}

GetKeylogCommandResponse::GetKeylogCommandResponse(const GetKeylogCommandResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:GetKeylogCommandResponse)
}

void GetKeylogCommandResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetKeylogCommandResponse::~GetKeylogCommandResponse() {
  // @@protoc_insertion_point(destructor:GetKeylogCommandResponse)
  SharedDtor();
}

void GetKeylogCommandResponse::SharedDtor() {
}

void GetKeylogCommandResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetKeylogCommandResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetKeylogCommandResponse_descriptor_;
}

const GetKeylogCommandResponse& GetKeylogCommandResponse::default_instance() {
  protobuf_InitDefaults_Proto_2fGetKeylogCommandResponse_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetKeylogCommandResponse> GetKeylogCommandResponse_default_instance_;

GetKeylogCommandResponse* GetKeylogCommandResponse::New(::google::protobuf::Arena* arena) const {
  GetKeylogCommandResponse* n = new GetKeylogCommandResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetKeylogCommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetKeylogCommandResponse)
  keylog_.Clear();
}

bool GetKeylogCommandResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GetKeylogCommandResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .SpiderKeyLoggingPayload keylog = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_keylog:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_keylog()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_keylog;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GetKeylogCommandResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GetKeylogCommandResponse)
  return false;
#undef DO_
}

void GetKeylogCommandResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GetKeylogCommandResponse)
  // repeated .SpiderKeyLoggingPayload keylog = 1;
  for (unsigned int i = 0, n = this->keylog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->keylog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:GetKeylogCommandResponse)
}

::google::protobuf::uint8* GetKeylogCommandResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GetKeylogCommandResponse)
  // repeated .SpiderKeyLoggingPayload keylog = 1;
  for (unsigned int i = 0, n = this->keylog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->keylog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:GetKeylogCommandResponse)
  return target;
}

size_t GetKeylogCommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetKeylogCommandResponse)
  size_t total_size = 0;

  // repeated .SpiderKeyLoggingPayload keylog = 1;
  {
    unsigned int count = this->keylog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->keylog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetKeylogCommandResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GetKeylogCommandResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetKeylogCommandResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetKeylogCommandResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GetKeylogCommandResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GetKeylogCommandResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetKeylogCommandResponse::MergeFrom(const GetKeylogCommandResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GetKeylogCommandResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetKeylogCommandResponse::UnsafeMergeFrom(const GetKeylogCommandResponse& from) {
  GOOGLE_DCHECK(&from != this);
  keylog_.MergeFrom(from.keylog_);
}

void GetKeylogCommandResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GetKeylogCommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetKeylogCommandResponse::CopyFrom(const GetKeylogCommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetKeylogCommandResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetKeylogCommandResponse::IsInitialized() const {

  return true;
}

void GetKeylogCommandResponse::Swap(GetKeylogCommandResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetKeylogCommandResponse::InternalSwap(GetKeylogCommandResponse* other) {
  keylog_.UnsafeArenaSwap(&other->keylog_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetKeylogCommandResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetKeylogCommandResponse_descriptor_;
  metadata.reflection = GetKeylogCommandResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetKeylogCommandResponse

// repeated .SpiderKeyLoggingPayload keylog = 1;
int GetKeylogCommandResponse::keylog_size() const {
  return keylog_.size();
}
void GetKeylogCommandResponse::clear_keylog() {
  keylog_.Clear();
}
const ::SpiderKeyLoggingPayload& GetKeylogCommandResponse::keylog(int index) const {
  // @@protoc_insertion_point(field_get:GetKeylogCommandResponse.keylog)
  return keylog_.Get(index);
}
::SpiderKeyLoggingPayload* GetKeylogCommandResponse::mutable_keylog(int index) {
  // @@protoc_insertion_point(field_mutable:GetKeylogCommandResponse.keylog)
  return keylog_.Mutable(index);
}
::SpiderKeyLoggingPayload* GetKeylogCommandResponse::add_keylog() {
  // @@protoc_insertion_point(field_add:GetKeylogCommandResponse.keylog)
  return keylog_.Add();
}
::google::protobuf::RepeatedPtrField< ::SpiderKeyLoggingPayload >*
GetKeylogCommandResponse::mutable_keylog() {
  // @@protoc_insertion_point(field_mutable_list:GetKeylogCommandResponse.keylog)
  return &keylog_;
}
const ::google::protobuf::RepeatedPtrField< ::SpiderKeyLoggingPayload >&
GetKeylogCommandResponse::keylog() const {
  // @@protoc_insertion_point(field_list:GetKeylogCommandResponse.keylog)
  return keylog_;
}

inline const GetKeylogCommandResponse* GetKeylogCommandResponse::internal_default_instance() {
  return &GetKeylogCommandResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
