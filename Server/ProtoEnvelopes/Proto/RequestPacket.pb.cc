// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Proto/RequestPacket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RequestPacket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RequestPacket_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestPacket_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* RequestPacket_MethodID_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_Proto_2fRequestPacket_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_Proto_2fRequestPacket_2eproto() {
  protobuf_AddDesc_Proto_2fRequestPacket_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Proto/RequestPacket.proto");
  GOOGLE_CHECK(file != NULL);
  RequestPacket_descriptor_ = file->message_type(0);
  static const int RequestPacket_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, limit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, clientuuid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, command_),
  };
  RequestPacket_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RequestPacket_descriptor_,
      RequestPacket::internal_default_instance(),
      RequestPacket_offsets_,
      -1,
      -1,
      -1,
      sizeof(RequestPacket),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestPacket, _internal_metadata_));
  RequestPacket_MethodID_descriptor_ = RequestPacket_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Proto_2fRequestPacket_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RequestPacket_descriptor_, RequestPacket::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Proto_2fRequestPacket_2eproto() {
  RequestPacket_default_instance_.Shutdown();
  delete RequestPacket_reflection_;
}

void protobuf_InitDefaults_Proto_2fRequestPacket_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_InitDefaults_Proto_2fCmdPacket_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  RequestPacket_default_instance_.DefaultConstruct();
  RequestPacket_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_Proto_2fRequestPacket_2eproto_once_);
void protobuf_InitDefaults_Proto_2fRequestPacket_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_Proto_2fRequestPacket_2eproto_once_,
                 &protobuf_InitDefaults_Proto_2fRequestPacket_2eproto_impl);
}
void protobuf_AddDesc_Proto_2fRequestPacket_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_Proto_2fRequestPacket_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031Proto/RequestPacket.proto\032\025Proto/CmdPa"
    "cket.proto\"\241\001\n\rRequestPacket\022\'\n\006Method\030\001"
    " \001(\0162\027.RequestPacket.MethodID\022\r\n\005Limit\030\002"
    " \001(\005\022\022\n\nclientUUID\030\003 \001(\t\022\033\n\007Command\030\004 \001("
    "\0132\n.CmdPacket\"\'\n\010MethodID\022\010\n\004LIST\020\000\022\007\n\003G"
    "ET\020\001\022\010\n\004SEND\020\002b\006proto3", 222);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Proto/RequestPacket.proto", &protobuf_RegisterTypes);
  ::protobuf_AddDesc_Proto_2fCmdPacket_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Proto_2fRequestPacket_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_Proto_2fRequestPacket_2eproto_once_);
void protobuf_AddDesc_Proto_2fRequestPacket_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_Proto_2fRequestPacket_2eproto_once_,
                 &protobuf_AddDesc_Proto_2fRequestPacket_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Proto_2fRequestPacket_2eproto {
  StaticDescriptorInitializer_Proto_2fRequestPacket_2eproto() {
    protobuf_AddDesc_Proto_2fRequestPacket_2eproto();
  }
} static_descriptor_initializer_Proto_2fRequestPacket_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* RequestPacket_MethodID_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestPacket_MethodID_descriptor_;
}
bool RequestPacket_MethodID_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const RequestPacket_MethodID RequestPacket::LIST;
const RequestPacket_MethodID RequestPacket::GET;
const RequestPacket_MethodID RequestPacket::SEND;
const RequestPacket_MethodID RequestPacket::MethodID_MIN;
const RequestPacket_MethodID RequestPacket::MethodID_MAX;
const int RequestPacket::MethodID_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestPacket::kMethodFieldNumber;
const int RequestPacket::kLimitFieldNumber;
const int RequestPacket::kClientUUIDFieldNumber;
const int RequestPacket::kCommandFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestPacket::RequestPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_Proto_2fRequestPacket_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:RequestPacket)
}

void RequestPacket::InitAsDefaultInstance() {
  command_ = const_cast< ::CmdPacket*>(
      ::CmdPacket::internal_default_instance());
}

RequestPacket::RequestPacket(const RequestPacket& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RequestPacket)
}

void RequestPacket::SharedCtor() {
  clientuuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  command_ = NULL;
  ::memset(&method_, 0, reinterpret_cast<char*>(&limit_) -
    reinterpret_cast<char*>(&method_) + sizeof(limit_));
  _cached_size_ = 0;
}

RequestPacket::~RequestPacket() {
  // @@protoc_insertion_point(destructor:RequestPacket)
  SharedDtor();
}

void RequestPacket::SharedDtor() {
  clientuuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &RequestPacket_default_instance_.get()) {
    delete command_;
  }
}

void RequestPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestPacket::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestPacket_descriptor_;
}

const RequestPacket& RequestPacket::default_instance() {
  protobuf_InitDefaults_Proto_2fRequestPacket_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RequestPacket> RequestPacket_default_instance_;

RequestPacket* RequestPacket::New(::google::protobuf::Arena* arena) const {
  RequestPacket* n = new RequestPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:RequestPacket)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(RequestPacket, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<RequestPacket*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(method_, limit_);
  clientuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && command_ != NULL) delete command_;
  command_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool RequestPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RequestPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .RequestPacket.MethodID Method = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::RequestPacket_MethodID >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Limit;
        break;
      }

      // optional int32 Limit = 2;
      case 2: {
        if (tag == 16) {
         parse_Limit:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &limit_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_clientUUID;
        break;
      }

      // optional string clientUUID = 3;
      case 3: {
        if (tag == 26) {
         parse_clientUUID:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientuuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientuuid().data(), this->clientuuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "RequestPacket.clientUUID"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_Command;
        break;
      }

      // optional .CmdPacket Command = 4;
      case 4: {
        if (tag == 34) {
         parse_Command:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_command()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RequestPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RequestPacket)
  return false;
#undef DO_
}

void RequestPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RequestPacket)
  // optional .RequestPacket.MethodID Method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // optional int32 Limit = 2;
  if (this->limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->limit(), output);
  }

  // optional string clientUUID = 3;
  if (this->clientuuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientuuid().data(), this->clientuuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestPacket.clientUUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->clientuuid(), output);
  }

  // optional .CmdPacket Command = 4;
  if (this->has_command()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->command_, output);
  }

  // @@protoc_insertion_point(serialize_end:RequestPacket)
}

::google::protobuf::uint8* RequestPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RequestPacket)
  // optional .RequestPacket.MethodID Method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // optional int32 Limit = 2;
  if (this->limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->limit(), target);
  }

  // optional string clientUUID = 3;
  if (this->clientuuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientuuid().data(), this->clientuuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "RequestPacket.clientUUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->clientuuid(), target);
  }

  // optional .CmdPacket Command = 4;
  if (this->has_command()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->command_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:RequestPacket)
  return target;
}

size_t RequestPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RequestPacket)
  size_t total_size = 0;

  // optional .RequestPacket.MethodID Method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  // optional int32 Limit = 2;
  if (this->limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->limit());
  }

  // optional string clientUUID = 3;
  if (this->clientuuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientuuid());
  }

  // optional .CmdPacket Command = 4;
  if (this->has_command()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->command_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RequestPacket)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RequestPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RequestPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RequestPacket)
    UnsafeMergeFrom(*source);
  }
}

void RequestPacket::MergeFrom(const RequestPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RequestPacket)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RequestPacket::UnsafeMergeFrom(const RequestPacket& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.method() != 0) {
    set_method(from.method());
  }
  if (from.limit() != 0) {
    set_limit(from.limit());
  }
  if (from.clientuuid().size() > 0) {

    clientuuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientuuid_);
  }
  if (from.has_command()) {
    mutable_command()->::CmdPacket::MergeFrom(from.command());
  }
}

void RequestPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RequestPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestPacket::CopyFrom(const RequestPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RequestPacket)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RequestPacket::IsInitialized() const {

  return true;
}

void RequestPacket::Swap(RequestPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestPacket::InternalSwap(RequestPacket* other) {
  std::swap(method_, other->method_);
  std::swap(limit_, other->limit_);
  clientuuid_.Swap(&other->clientuuid_);
  std::swap(command_, other->command_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestPacket::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestPacket_descriptor_;
  metadata.reflection = RequestPacket_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestPacket

// optional .RequestPacket.MethodID Method = 1;
void RequestPacket::clear_method() {
  method_ = 0;
}
::RequestPacket_MethodID RequestPacket::method() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Method)
  return static_cast< ::RequestPacket_MethodID >(method_);
}
void RequestPacket::set_method(::RequestPacket_MethodID value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:RequestPacket.Method)
}

// optional int32 Limit = 2;
void RequestPacket::clear_limit() {
  limit_ = 0;
}
::google::protobuf::int32 RequestPacket::limit() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Limit)
  return limit_;
}
void RequestPacket::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:RequestPacket.Limit)
}

// optional string clientUUID = 3;
void RequestPacket::clear_clientuuid() {
  clientuuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RequestPacket::clientuuid() const {
  // @@protoc_insertion_point(field_get:RequestPacket.clientUUID)
  return clientuuid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestPacket::set_clientuuid(const ::std::string& value) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RequestPacket.clientUUID)
}
void RequestPacket::set_clientuuid(const char* value) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RequestPacket.clientUUID)
}
void RequestPacket::set_clientuuid(const char* value, size_t size) {
  
  clientuuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RequestPacket.clientUUID)
}
::std::string* RequestPacket::mutable_clientuuid() {
  
  // @@protoc_insertion_point(field_mutable:RequestPacket.clientUUID)
  return clientuuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RequestPacket::release_clientuuid() {
  // @@protoc_insertion_point(field_release:RequestPacket.clientUUID)
  
  return clientuuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RequestPacket::set_allocated_clientuuid(::std::string* clientuuid) {
  if (clientuuid != NULL) {
    
  } else {
    
  }
  clientuuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientuuid);
  // @@protoc_insertion_point(field_set_allocated:RequestPacket.clientUUID)
}

// optional .CmdPacket Command = 4;
bool RequestPacket::has_command() const {
  return this != internal_default_instance() && command_ != NULL;
}
void RequestPacket::clear_command() {
  if (GetArenaNoVirtual() == NULL && command_ != NULL) delete command_;
  command_ = NULL;
}
const ::CmdPacket& RequestPacket::command() const {
  // @@protoc_insertion_point(field_get:RequestPacket.Command)
  return command_ != NULL ? *command_
                         : *::CmdPacket::internal_default_instance();
}
::CmdPacket* RequestPacket::mutable_command() {
  
  if (command_ == NULL) {
    command_ = new ::CmdPacket;
  }
  // @@protoc_insertion_point(field_mutable:RequestPacket.Command)
  return command_;
}
::CmdPacket* RequestPacket::release_command() {
  // @@protoc_insertion_point(field_release:RequestPacket.Command)
  
  ::CmdPacket* temp = command_;
  command_ = NULL;
  return temp;
}
void RequestPacket::set_allocated_command(::CmdPacket* command) {
  delete command_;
  command_ = command;
  if (command) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:RequestPacket.Command)
}

inline const RequestPacket* RequestPacket::internal_default_instance() {
  return &RequestPacket_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
